<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>dynamic json read</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#x2f;</directory>
    <parameters>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table/>
<size_limit_lines/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field><field><id>EXECUTING_SERVER</id><enabled>N</enabled><name>EXECUTING_SERVER</name></field><field><id>EXECUTING_USER</id><enabled>N</enabled><name>EXECUTING_USER</name></field><field><id>CLIENT</id><enabled>N</enabled><name>CLIENT</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
<metrics-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>METRICS_DATE</id><enabled>Y</enabled><name>METRICS_DATE</name></field><field><id>METRICS_CODE</id><enabled>Y</enabled><name>METRICS_CODE</name></field><field><id>METRICS_DESCRIPTION</id><enabled>Y</enabled><name>METRICS_DESCRIPTION</name></field><field><id>METRICS_SUBJECT</id><enabled>Y</enabled><name>METRICS_SUBJECT</name></field><field><id>METRICS_TYPE</id><enabled>Y</enabled><name>METRICS_TYPE</name></field><field><id>METRICS_VALUE</id><enabled>Y</enabled><name>METRICS_VALUE</name></field></metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <created_user>-</created_user>
  <created_date>2016&#x2f;03&#x2f;22 14&#x3a;02&#x3a;14.094</created_date>
  <modified_user>-</modified_user>
  <modified_date>2016&#x2f;03&#x2f;22 14&#x3a;02&#x3a;14.094</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA&#x3d;</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
    <notepad>
      <note>in CSV fileoutput&#x3a;&#xd;&#xa;Uncheck Content&#x3e;Append for an incremental file.&#xd;&#xa;Check Content&#x3e;Append for a full file.</note>
      <xloc>240</xloc>
      <yloc>944</yloc>
      <width>274</width>
      <heigth>58</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>The row accross reads and parses the logging lines from the &#x22;aws s3 sync&#x22; commands in the dynamically created jnjs3sync.sh file.  Only new files synced generate log lines.</note>
      <xloc>48</xloc>
      <yloc>48</yloc>
      <width>911</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>The User Defined Java Class does custom parsing of the rows in the S3 sync log after we&#x27;ve done all the parsing we could in the first row.</note>
      <xloc>224</xloc>
      <yloc>224</yloc>
      <width>725</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <order>
  <hop> <from>Split Fields 2</from><to>Filter rows</to><enabled>Y</enabled> </hop>
  <hop> <from>S3 sync log Text file input</from><to>Split Fields</to><enabled>Y</enabled> </hop>
  <hop> <from>Split Fields</from><to>Split Fields 2</to><enabled>Y</enabled> </hop>
  <hop> <from>Filter rows</from><to>Split Fields 3</to><enabled>Y</enabled> </hop>
  <hop> <from>Split Fields 3</from><to>Select values 2</to><enabled>Y</enabled> </hop>
  <hop> <from>Select values 2</from><to>User Defined Java Class</to><enabled>Y</enabled> </hop>
  <hop> <from>User Defined Java Class</from><to>Select values</to><enabled>Y</enabled> </hop>
  <hop> <from>Select values</from><to>Json Input</to><enabled>Y</enabled> </hop>
  <hop> <from>Json Input</from><to>Modified Java Script Value</to><enabled>Y</enabled> </hop>
  </order>
  <step>
    <name>CSV file output</name>
    <type>TextFileOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <separator>,</separator>
    <enclosure>&#x22;</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding/>
    <endedLine/>
    <fileNameInField>N</fileNameInField>
    <fileNameField/>
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>.&#x2f;scripts&#x2f;json_flat_file</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>Y</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>root1</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>root2</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>uuid</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>levelA</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>levelB</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>levelC</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>levelD</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>levelE</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>levelF</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>destination</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>filename</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>filepath</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payload</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>subject_datum_uuid</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>metadata.ingestion_definition_uuid</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>metadata.subject_uuid</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>metadata.study_uuid</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>metadata.study_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>metadata.schema</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>metadata.rave_base_url</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>metadata.queried_timestamp</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>aggregates</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>aggregates.name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>aggregates.value</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>aggregates.unit</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>aggregates.objects_aggregated_count</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>aggregates.last_updated</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.timestamp</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.utc_offset</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.source</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.source_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.last_updated</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric._id</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.blood_calcium</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.blood_chromium</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.blood_folic_acid</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.blood_magnesium</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.blood_potassium</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.blood_sodium</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.blood_vitamin_b12</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.blood_zinc</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.creatine_kinase</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.crp</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.diastolic</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.ferritin</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.hdl</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.hscrp</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.il6</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.ldl</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.resting_heartrate</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.systolic</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.testosterone</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.total_cholesterol</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.tsh</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.uric_acid</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.vitamin_d</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.white_cell_count</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.spo2</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.temperature</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadBiometric.validated</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness._id</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.activity_category</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.activity_id</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.activity_start_time</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.activity_type</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.average_speed_in_meters_per_second</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.avg_pace_in_minutes_per_mile</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.calories</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.device_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.distance</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.distance_in_meters</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.duration</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.duration_seconds</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.intensity</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.last_updated</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.source</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.source_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.start_time</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.start_time_offset</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.timestamp</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.type</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.utc_offset</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadFitness.validated</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.timestamp</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.utc_offset</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.source</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.source_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.last_updated</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep._id</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.awake</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.deep</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.light</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.rem</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.times_woken</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.total_sleep</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadSleep.validated</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine._id</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.active_secs</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.activity_id</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.device_id</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.device_type</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.timestamp</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.utc_offset</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.steps</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.calories_burned</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.distance</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.duration_secs</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.floors</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.elevation</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.kcal</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.source</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.source_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.last_updated</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.met</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.voltage</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.validated</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutine.water</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegment.duration</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegment.elevation</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegment.last_updated</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegment.steps</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegment.calories_burned</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegment.distance</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegment.floors</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.activeSecs</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.activityType</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.deviceType</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.distance</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.durationSecs</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.kcal</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.startTime</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.startTimeOffset</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.steps</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.userAccessToken</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.voltage</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineRaw.wellnessSummaryId</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.deviceType</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.distance</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.startTimeOffset</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.steps</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.voltage</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.intensity</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.kcal</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.userAccessToken</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.wellnessSummaryId</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.durationSecs</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.startTime</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.met</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.activeSecs</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>payloadRoutineSegmentExpanded.activityType</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>112</xloc>
      <yloc>960</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Filter rows</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
<send_true_to>Split Fields 3</send_true_to>
<send_false_to/>
    <compare>
<condition>
 <negated>N</negated>
 <leftvalue>destination</leftvalue>
 <function>IS NOT NULL</function>
 <rightvalue>json_file</rightvalue>
 </condition>
    </compare>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>480</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>S3 sync log Text file input</name>
    <type>TextFileInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <accept_filenames>N</accept_filenames>
    <passing_through_fields>N</passing_through_fields>
    <accept_field/>
    <accept_stepname/>
    <separator>&#x24;&#x7b;line.separator&#x7d;&#xd;&#xa;</separator>
    <enclosure/>
    <enclosure_breaks>N</enclosure_breaks>
    <escapechar/>
    <header>N</header>
    <nr_headerlines>1</nr_headerlines>
    <footer>N</footer>
    <nr_footerlines>1</nr_footerlines>
    <line_wrapped>N</line_wrapped>
    <nr_wraps>1</nr_wraps>
    <layout_paged>N</layout_paged>
    <nr_lines_per_page>80</nr_lines_per_page>
    <nr_lines_doc_header>0</nr_lines_doc_header>
    <noempty>Y</noempty>
    <include>N</include>
    <include_field/>
    <rownum>N</rownum>
    <rownumByFile>N</rownumByFile>
    <rownum_field/>
    <format>Unix</format>
    <encoding/>
    <add_to_result_filenames>Y</add_to_result_filenames>
    <file>
      <name>C&#x3a;&#x5c;Users&#x5c;H-DRIVE&#x5c;Pentaho&#x5c;data-integration&#x5c;unix_di_root&#x5c;scripts&#x5c;sync_log.txt</name>
      <filemask/>
      <exclude_filemask/>
      <file_required>N</file_required>
      <include_subfolders>N</include_subfolders>
      <type>CSV</type>
      <compression>None</compression>
    </file>
    <filters>
    </filters>
    <fields>
      <field>
        <name>logline</name>
        <type>String</type>
        <format/>
        <currency>&#x24;</currency>
        <decimal>.</decimal>
        <group>,</group>
        <nullif>-</nullif>
        <ifnull/>
        <position>-1</position>
        <length>260</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
    </fields>
    <limit>0</limit>
    <error_ignored>N</error_ignored>
    <skip_bad_files>N</skip_bad_files>
    <file_error_field/>
    <file_error_message_field/>
    <error_line_skipped>N</error_line_skipped>
    <error_count_field/>
    <error_fields_field/>
    <error_text_field/>
    <bad_line_files_destination_directory/>
    <bad_line_files_extension>warning</bad_line_files_extension>
    <error_line_files_destination_directory/>
    <error_line_files_extension>error</error_line_files_extension>
    <line_number_files_destination_directory/>
    <line_number_files_extension>line</line_number_files_extension>
    <date_format_lenient>Y</date_format_lenient>
    <date_format_locale>en_US</date_format_locale>
    <shortFileFieldName/>
    <pathFieldName/>
    <hiddenFieldName/>
    <lastModificationTimeFieldName/>
    <uriNameFieldName/>
    <rootUriNameFieldName/>
    <extensionFieldName/>
    <sizeFieldName/>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>96</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Select values</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>      <field>        <name>junk1</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>junk2</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>root1</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>root2</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>uuid</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelA</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelB</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelC</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelD</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelE</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelF</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>destination</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>filename</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>filepath</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>        <select_unspecified>N</select_unspecified>
      <remove>        <name>junk1</name>
      </remove>      <remove>        <name>junk2</name>
      </remove>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>112</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Select values 2</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>      <field>        <name>junk</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>junk1</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>junk2</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>root1</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>root2</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>uuid</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelA</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelB</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelC</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelD</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelE</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>levelF</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>destination</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>        <select_unspecified>N</select_unspecified>
      <remove>        <name>junk</name>
      </remove>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>720</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Split Fields</name>
    <type>FieldSplitter</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
   <splitfield>logline</splitfield>
   <delimiter>copy&#x3a;</delimiter>
   <enclosure/>
    <fields>      <field>        <name>junk</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>copycommand</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>224</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Split Fields 2</name>
    <type>FieldSplitter</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
   <splitfield>copycommand</splitfield>
   <delimiter> to </delimiter>
   <enclosure/>
    <fields>      <field>        <name>json_file</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>destination</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>400</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Split Fields 3</name>
    <type>FieldSplitter</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
   <splitfield>json_file</splitfield>
   <delimiter>&#x2f;</delimiter>
   <enclosure/>
    <fields>      <field>        <name>junk1</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>junk2</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>root1</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>root2</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>uuid</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>levelA</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>levelB</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>levelC</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>levelD</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>levelE</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>      <field>        <name>levelF</name>
        <id/>
        <idrem>N</idrem>
        <type>String</type>
        <format/>
        <group/>
        <decimal/>
        <currency/>
        <length>-1</length>
        <precision>-1</precision>
        <nullif/>
        <ifnull/>
        <trimtype>none</trimtype>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>608</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>User Defined Java Class</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Processor</class_name>

        <class_source><![CDATA[String levelA;
String levelB;
String levelC;
String levelD;
String levelE;
String levelF;
String file_name;
String root1;
String root2;
String file_path;
String uuid;

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
    // First, get a row from the default input hop
	//
	Object[] r = getRow();

    // If the row object is null, we are done processing.
	//
	if (r == null) {
		setOutputDone();
		return false;
	}

	// Let's look up parameters only once for performance reason.
	//
	if (first) {
		root1 = getParameter("ROOT_1");
		root2 = getParameter("ROOT_2");
		levelA = getParameter("LEVEL_A");
		levelB = getParameter("LEVEL_B");
		levelC = getParameter("LEVEL_C");
		levelD = getParameter("LEVEL_D");
		levelE = getParameter("LEVEL_E");
		levelF = getParameter("LEVEL_F");
		file_name = getParameter("FILE_NAME");
		file_path = getParameter("FILE_PATH");
		uuid = getParameter("UUID");
	    first=false;
	}

    // It is always safest to call createOutputRow() to ensure that your output row's Object[] is large
    // enough to handle any new fields you are creating in this step.
	//
    Object[] outputRow = createOutputRow(r, data.outputRowMeta.size());

    String filename;

	String root_1 = get(Fields.In, root1).getString(r);
	String root_2 = get(Fields.In, root2).getString(r);
	String level_a = get(Fields.In, levelA).getString(r);
	String level_b = get(Fields.In, levelB).getString(r);
	String level_c = get(Fields.In, levelC).getString(r);
	String level_d = get(Fields.In, levelD).getString(r);
	String level_e = get(Fields.In, levelE).getString(r);
	String level_f = get(Fields.In, levelF).getString(r);
	String Uuid = get(Fields.In, uuid).getString(r);

	String filepath = "s3://AKIAJTPOGBYVDKYXBAHA:pqGvRph55dvNPYUEhJl1XOMMHTRcXQz43tq4yRaV@s3/" + root_1 + "/" + root_2 + "/" + Uuid + "/";

	if(level_a.contains(".json")) {
		filename = level_a;
      	level_a = null;
		filepath += filename;
		}
	else if(level_b.contains(".json")) {
		filename = level_b;
		level_b = null;
		filepath += level_a + "/" + filename;
		}
	else if(level_c.contains(".json")) {
		filename = level_c;
		level_c = null;
		filepath += level_a + "/" + level_b + "/" + filename;
		}
	else if(level_d.contains(".json")) {
		filename = level_d;
		level_d = null;
		filepath += level_a + "/" + level_b + "/" + level_c + "/" + filename;
		}
	else if(level_e.contains(".json")) {
		filename = level_e;
		filepath += level_a + "/" + level_b + "/" + level_c + "/" + level_d + "/" + filename;
		level_e = null;
		}
	else if(level_f.contains(".json")) {
		filename = level_f;
		filepath += level_a + "/" + level_b + "/" + level_c + "/" + level_d + "/" + level_e + "/" + filename;
		level_f = null;
		}

    else {
		filename = "";
		}
	
	// Set the value in the output field
	//
	
	get(Fields.Out, file_name).setValue(outputRow, filename);
	get(Fields.Out, file_path).setValue(outputRow, filepath);
	get(Fields.Out, levelA).setValue(outputRow, level_a);
	get(Fields.Out, levelB).setValue(outputRow, level_b);
	get(Fields.Out, levelC).setValue(outputRow, level_c);
	get(Fields.Out, levelD).setValue(outputRow, level_d);
	get(Fields.Out, levelE).setValue(outputRow, level_e);
	get(Fields.Out, levelF).setValue(outputRow, level_f);

    
    // putRow will send the row on to the default output hop.
	//
    putRow(data.outputRowMeta, outputRow);

	return true;
}]]></class_source>
        </definition>
    </definitions>
    <fields>
        <field>
        <field_name>filename</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>filepath</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
    </fields><clear_result_fields>N</clear_result_fields>
<info_steps></info_steps><target_steps></target_steps><usage_parameters><usage_parameter><parameter_tag>ROOT_1</parameter_tag>
<parameter_value>root1</parameter_value>
<parameter_description>folder before uuid</parameter_description>
</usage_parameter><usage_parameter><parameter_tag>ROOT_2</parameter_tag>
<parameter_value>root2</parameter_value>
<parameter_description>folder before uuid</parameter_description>
</usage_parameter><usage_parameter><parameter_tag>UUID</parameter_tag>
<parameter_value>uuid</parameter_value>
<parameter_description>uuid</parameter_description>
</usage_parameter><usage_parameter><parameter_tag>LEVEL_A</parameter_tag>
<parameter_value>levelA</parameter_value>
<parameter_description>The field that contains levelA</parameter_description>
</usage_parameter><usage_parameter><parameter_tag>LEVEL_B</parameter_tag>
<parameter_value>levelB</parameter_value>
<parameter_description>The field that contains levelB</parameter_description>
</usage_parameter><usage_parameter><parameter_tag>LEVEL_C</parameter_tag>
<parameter_value>levelC</parameter_value>
<parameter_description>The field that contains levelC</parameter_description>
</usage_parameter><usage_parameter><parameter_tag>LEVEL_D</parameter_tag>
<parameter_value>levelD</parameter_value>
<parameter_description>The field that contains levelD</parameter_description>
</usage_parameter><usage_parameter><parameter_tag>LEVEL_E</parameter_tag>
<parameter_value>levelD</parameter_value>
<parameter_description>The field that contains levelE</parameter_description>
</usage_parameter><usage_parameter><parameter_tag>LEVEL_F</parameter_tag>
<parameter_value>levelF</parameter_value>
<parameter_description>The field that contains levelF</parameter_description>
</usage_parameter><usage_parameter><parameter_tag>FILE_NAME</parameter_tag>
<parameter_value>filename</parameter_value>
<parameter_description>the field that contains filename</parameter_description>
</usage_parameter><usage_parameter><parameter_tag>FILE_PATH</parameter_tag>
<parameter_value>filepath</parameter_value>
<parameter_description>the S3 path</parameter_description>
</usage_parameter></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>112</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Json Input</name>
    <type>JsonInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <include>N</include>
    <include_field/>
    <rownum>N</rownum>
    <addresultfile>N</addresultfile>
    <readurl>N</readurl>
    <IsIgnoreEmptyFile>Y</IsIgnoreEmptyFile>
    <doNotFailIfNoFile>Y</doNotFailIfNoFile>
    <ignoreMissingPath>Y</ignoreMissingPath>
    <rownum_field/>
    <file>
      <name/>
      <filemask/>
      <exclude_filemask/>
      <file_required>N</file_required>
      <include_subfolders>N</include_subfolders>
    </file>
    <fields>
      <field>
        <name>entiredata</name>
        <path>&#x24;.&#x2a;</path>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
    </fields>
    <limit>0</limit>
    <IsInFields>Y</IsInFields>
    <IsAFile>Y</IsAFile>
    <valueField>filepath</valueField>
    <shortFileFieldName/>
    <pathFieldName/>
    <hiddenFieldName/>
    <lastModificationTimeFieldName/>
    <uriNameFieldName/>
    <rootUriNameFieldName/>
    <extensionFieldName/>
    <sizeFieldName/>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>112</xloc>
      <yloc>352</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Modified Java Script Value</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>Y</compatible>
    <optimizationLevel>0</optimizationLevel>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>Events &#x3d; &#x7b;&#xd;&#xa;  permalink&#x3a; function&#x28;&#x29; &#x7b;&#xd;&#xa;    ga&#x28;&#x27;send&#x27;, &#x27;event&#x27;, &#x27;permalink&#x27;, &#x27;created&#x27;&#x29;&#xd;&#xa;  &#x7d;,&#xd;&#xa;&#xd;&#xa;  permalink_error&#x3a; function&#x28;value&#x29; &#x7b;&#xd;&#xa;    ga&#x28;&#x27;send&#x27;, &#x27;event&#x27;, &#x27;permalink&#x27;, &#x27;error&#x27;, &#x22;&#x22; &#x2b; value&#x29;&#x3b;&#xd;&#xa;  &#x7d;,&#xd;&#xa;&#xd;&#xa;  download&#x3a; function&#x28;size&#x29; &#x7b;&#xd;&#xa;    ga&#x28;&#x27;send&#x27;, &#x27;event&#x27;, &#x27;download&#x27;, &#x27;clicked&#x27;, &#x27;size&#x27;, size&#x29;&#x3b;&#xd;&#xa;  &#x7d;&#xd;&#xa;&#xd;&#xa;&#x7d;&#xd;&#xa;&#xd;&#xa;function getParam&#x28;name&#x29; &#x7b;&#xd;&#xa;    name &#x3d; name.replace&#x28;&#x2f;&#x5b;&#x5c;&#x5b;&#x5d;&#x2f;, &#x22;&#x5c;&#x5c;&#x5b;&#x22;&#x29;.replace&#x28;&#x2f;&#x5b;&#x5c;&#x5d;&#x5d;&#x2f;, &#x22;&#x5c;&#x5c;&#x5d;&#x22;&#x29;&#x3b;&#xd;&#xa;    var regex &#x3d; new RegExp&#x28;&#x22;&#x5b;&#x5c;&#x5c;&#x3f;&#x26;&#x5d;&#x22; &#x2b; name &#x2b; &#x22;&#x3d;&#x28;&#x5b;&#x5e;&#x26;&#x23;&#x5d;&#x2a;&#x29;&#x22;&#x29;,&#xd;&#xa;        results &#x3d; regex.exec&#x28;location.search&#x29;&#x3b;&#xd;&#xa;    return results &#x3d;&#x3d; null &#x3f; &#x22;&#x22; &#x3a; decodeURIComponent&#x28;results&#x5b;1&#x5d;.replace&#x28;&#x2f;&#x5c;&#x2b;&#x2f;g, &#x22; &#x22;&#x29;&#x29;&#x3b;&#xd;&#xa;&#x7d;&#xd;&#xa;&#xd;&#xa;&#x2f;&#x2f; adapted from csvkit&#x27;s recursive JSON flattening mechanism&#x3a;&#xd;&#xa;&#x2f;&#x2f; https&#x3a;&#x2f;&#x2f;github.com&#x2f;onyxfish&#x2f;csvkit&#x2f;blob&#x2f;61b9c208b7665c20e9a8e95ba6eee811d04705f0&#x2f;csvkit&#x2f;convert&#x2f;js.py&#x23;L15-L34&#xd;&#xa;&#xd;&#xa;&#x2f;&#x2f; depends on jquery and jquery-csv &#x28;for now&#x29;&#xd;&#xa;&#xd;&#xa;function parse_object&#x28;obj, path&#x29; &#x7b;&#xd;&#xa;    if &#x28;path &#x3d;&#x3d; undefined&#x29;&#xd;&#xa;        path &#x3d; &#x22;&#x22;&#x3b;&#xd;&#xa;&#xd;&#xa;    var type &#x3d; typeof obj&#x3b;&#xd;&#xa;    var scalar &#x3d; &#x28;type &#x3d;&#x3d; &#x22;number&#x22; &#x7c;&#x7c; type &#x3d;&#x3d; &#x22;string&#x22; &#x7c;&#x7c; type &#x3d;&#x3d; &#x22;boolean&#x22; &#x7c;&#x7c; type &#x3d;&#x3d; &#x22;null&#x22;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;    if &#x28;type &#x3d;&#x3d; &#x22;array&#x22; &#x7c;&#x7c; type &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xd;&#xa;        var d &#x3d; &#x7b;&#x7d;&#x3b;&#xd;&#xa;        for &#x28;var i in obj&#x29; &#x7b;&#xd;&#xa;&#xd;&#xa;            var newD &#x3d; parse_object&#x28;obj&#x5b;i&#x5d;, path &#x2b; i &#x2b; &#x22;&#x2f;&#x22;&#x29;&#x3b;&#xd;&#xa;            newD.assign&#x28;newD, d&#x29;&#x3b;&#xd;&#xa;			&#x2f;&#x2f;&#x24;.extend&#x28;d, newD&#x29;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        return d&#x3b;&#xd;&#xa;    &#x7d;&#xd;&#xa;&#xd;&#xa;    else if &#x28;scalar&#x29; &#x7b;&#xd;&#xa;        var d &#x3d; &#x7b;&#x7d;&#x3b;&#xd;&#xa;        var endPath &#x3d; path.substr&#x28;0, path.length-1&#x29;&#x3b;&#xd;&#xa;        d&#x5b;endPath&#x5d; &#x3d; obj&#x3b;&#xd;&#xa;        return d&#x3b;&#xd;&#xa;    &#x7d;&#xd;&#xa;&#xd;&#xa;    &#x2f;&#x2f; &#x3f;&#xd;&#xa;    else return &#x7b;&#x7d;&#x3b;&#xd;&#xa;&#x7d;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#x2f;&#x2f; otherwise, just find the first one&#xd;&#xa;function arrayFrom&#x28;json&#x29; &#x7b;&#xd;&#xa;    var queue &#x3d; &#x5b;&#x5d;, next &#x3d; json&#x3b;&#xd;&#xa;    while &#x28;next &#x21;&#x3d;&#x3d; undefined&#x29; &#x7b;&#xd;&#xa;&#xd;&#xa;        if &#x28;typeof next &#x3d;&#x3d; &#x22;array&#x22;&#x29; &#x7b;&#xd;&#xa;&#xd;&#xa;            &#x2f;&#x2f; but don&#x27;t if it&#x27;s just empty, or an array of scalars&#xd;&#xa;            if &#x28;next.length &#x3e; 0&#x29; &#x7b;&#xd;&#xa;&#xd;&#xa;              var type &#x3d; typeof next&#x5b;0&#x5d;&#x3b;&#xd;&#xa;              var scalar &#x3d; &#x28;type &#x3d;&#x3d; &#x22;number&#x22; &#x7c;&#x7c; type &#x3d;&#x3d; &#x22;string&#x22; &#x7c;&#x7c; type &#x3d;&#x3d; &#x22;boolean&#x22; &#x7c;&#x7c; type &#x3d;&#x3d; &#x22;null&#x22;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;              if &#x28;&#x21;scalar&#x29;&#xd;&#xa;                return next&#x3b;&#xd;&#xa;            &#x7d;&#xd;&#xa;        &#x7d; if &#x28;typeof next &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xd;&#xa;          for &#x28;var key in next&#x29;&#xd;&#xa;             queue.push&#x28;next&#x5b;key&#x5d;&#x29;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;        next &#x3d; queue.shift&#x28;&#x29;&#x3b;&#xd;&#xa;    &#x7d;&#xd;&#xa;    &#x2f;&#x2f; none found, consider the whole object a row&#xd;&#xa;    return &#x5b;json&#x5d;&#x3b;&#xd;&#xa;&#x7d;&#xd;&#xa;&#xd;&#xa;&#x2f;&#x2f; adapted from Mattias Petter Johanssen&#x3a;&#xd;&#xa;&#x2f;&#x2f; https&#x3a;&#x2f;&#x2f;www.quora.com&#x2f;How-can-I-parse-unquoted-JSON-with-JavaScript&#x2f;answer&#x2f;Mattias-Petter-Johansson&#xd;&#xa;function quoteKeys&#x28;input&#x29; &#x7b;&#xd;&#xa;  return input.replace&#x28;&#x2f;&#x28;&#x5b;&#x27;&#x22;&#x5d;&#x29;&#x3f;&#x28;&#x5b;a-zA-Z0-9_&#x5d;&#x2b;&#x29;&#x28;&#x5b;&#x27;&#x22;&#x5d;&#x29;&#x3f;&#x3a;&#x2f;g, &#x27;&#x22;&#x24;2&#x22;&#x3a; &#x27;&#x29;&#x3b;&#xd;&#xa;&#x7d;&#xd;&#xa;&#xd;&#xa;function removeTrailingComma&#x28;input&#x29; &#x7b;&#xd;&#xa;  if &#x28;input.slice&#x28;-1&#x29; &#x3d;&#x3d; &#x22;,&#x22;&#x29;&#xd;&#xa;    return input.slice&#x28;0,-1&#x29;&#x3b;&#xd;&#xa;  else&#xd;&#xa;    return input&#x3b;&#xd;&#xa;&#x7d;&#xd;&#xa;&#xd;&#xa;&#x2f;&#x2f; Rudimentary, imperfect detection of JSON Lines &#x28;http&#x3a;&#x2f;&#x2f;jsonlines.org&#x29;&#x3a;&#xd;&#xa;&#x2f;&#x2f;&#xd;&#xa;&#x2f;&#x2f; Is there a closing brace and an opening brace with only whitespace between&#x3f;&#xd;&#xa;function isJSONLines&#x28;string&#x29; &#x7b;&#xd;&#xa; return &#x21;&#x21;&#x28;string.match&#x28;&#x2f;&#x5c;&#x7d;&#x5c;s&#x2b;&#x5c;&#x7b;&#x2f;&#x29;&#x29;&#xd;&#xa;&#x7d;&#xd;&#xa;&#xd;&#xa;&#x2f;&#x2f; To convert JSON Lines to JSON&#x3a;&#xd;&#xa;&#x2f;&#x2f; &#x2a; Add a comma between spaced braces&#xd;&#xa;&#x2f;&#x2f; &#x2a; Surround with array brackets&#xd;&#xa;function linesToJSON&#x28;string&#x29; &#x7b;&#xd;&#xa;  return &#x22;&#x5b;&#x22; &#x2b; string.replace&#x28;&#x2f;&#x5c;&#x7d;&#x5c;s&#x2b;&#x5c;&#x7b;&#x2f;g, &#x22;&#x7d;, &#x7b;&#x22;&#x29; &#x2b; &#x22;&#x5d;&#x22;&#x3b;&#xd;&#xa;&#x7d;&#xd;&#xa;&#xd;&#xa;&#x2f;&#x2f; todo&#x3a; add graceful error handling&#xd;&#xa;function jsonFrom&#x28;input&#x29; &#x7b;&#xd;&#xa;  var string &#x3d; input&#x3b;&#xd;&#xa;  if &#x28;&#x21;string&#x29; return&#x3b;&#xd;&#xa;&#xd;&#xa;  var result &#x3d; null&#x3b;&#xd;&#xa;  try &#x7b;&#xd;&#xa;    result &#x3d; JSON.parse&#x28;string&#x29;&#x3b;&#xd;&#xa;  &#x7d; catch &#x28;err&#x29; &#x7b;&#xd;&#xa;    console.log&#x28;err&#x29;&#x3b;&#xd;&#xa;  &#x7d;&#xd;&#xa;&#xd;&#xa;  if &#x28;result &#x3d;&#x3d; null&#x29; &#x7b;&#xd;&#xa;    console.log&#x28;&#x22;Parse failed, retrying after forcibly quoting keys and removing trailing commas...&#x22;&#x29;&#xd;&#xa;    var relaxed &#x3d; quoteKeys&#x28;removeTrailingComma&#x28;string&#x29;&#x29;&#xd;&#xa;    try &#x7b;&#xd;&#xa;      result &#x3d; JSON.parse&#x28;relaxed&#x29;&#x3b;&#xd;&#xa;      console.log&#x28;&#x22;Yep&#x3a; quoting keys and removing trailing commas worked&#x21;&#x22;&#x29;&#xd;&#xa;    &#x7d; catch &#x28;err&#x29; &#x7b;&#xd;&#xa;      console.log&#x28;err&#x29;&#x3b;&#xd;&#xa;    &#x7d;&#xd;&#xa;  &#x7d;&#xd;&#xa;&#xd;&#xa;  &#x2f;&#x2f; Try to detect if it&#x27;s a JSON-lines object - if so, we can parse this.&#xd;&#xa;  &#x2f;&#x2f;&#xd;&#xa;  &#x2f;&#x2f; However, this should be TRIED LAST, because this could also modify the&#xd;&#xa;  &#x2f;&#x2f; CONTENT of the strings &#x28;it&#x27;s not precise enough to only target real&#xd;&#xa;  &#x2f;&#x2f; line breaks&#x29; so if the problem was actually something else, then we want to&#xd;&#xa;  &#x2f;&#x2f; fix that problem instead. &#x28;That said, the string content modification&#xd;&#xa;  &#x2f;&#x2f; would be minimal -- adding a comma between braces, so that&#x27;s why I feel&#xd;&#xa;  &#x2f;&#x2f; okay taking this approach.&#x29;&#xd;&#xa;  if &#x28;&#x28;result &#x3d;&#x3d; null&#x29; &#x26;&#x26; isJSONLines&#x28;string&#x29;&#x29; &#x7b;&#xd;&#xa;    console.log&#x28;&#x22;Parse failed. Looks like it might be JSON lines, retrying...&#x22;&#x29;&#xd;&#xa;    var lines &#x3d; linesToJSON&#x28;string&#x29;&#xd;&#xa;    try &#x7b;&#xd;&#xa;      result &#x3d; JSON.parse&#x28;lines&#x29;&#xd;&#xa;      console.log&#x28;&#x22;Yep&#x3a; it was JSON lines&#x21;&#x22;&#x29;&#xd;&#xa;    &#x7d; catch &#x28;err&#x29; &#x7b;&#xd;&#xa;      console.log&#x28;err&#x29;&#x3b;&#xd;&#xa;      if &#x28;lines.length &#x3c; 5000&#x29; console.log&#x28;lines&#x29;&#x3b;&#xd;&#xa;    &#x7d;&#xd;&#xa;  &#x7d;&#xd;&#xa;&#xd;&#xa;  if &#x28;result &#x3d;&#x3d; null&#x29;&#xd;&#xa;    console.log&#x28;&#x22;Nope&#x3a; that didn&#x27;t work either. No good.&#x22;&#x29;&#xd;&#xa;&#xd;&#xa;  return result&#x3b;&#xd;&#xa;&#x7d;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#x2f;&#x2a;&#x2a;&#xd;&#xa; &#x2a; jQuery-csv &#x28;jQuery Plugin&#x29;&#xd;&#xa; &#x2a; version&#x3a; 0.70 &#x28;2012-11-04&#x29;&#xd;&#xa; &#x2a;&#xd;&#xa; &#x2a; This document is licensed as free software under the terms of the&#xd;&#xa; &#x2a; MIT License&#x3a; http&#x3a;&#x2f;&#x2f;www.opensource.org&#x2f;licenses&#x2f;mit-license.php&#xd;&#xa; &#x2a;&#xd;&#xa; &#x2a; Acknowledgements&#x3a;&#xd;&#xa; &#x2a; The original design and influence to implement this library as a jquery&#xd;&#xa; &#x2a; plugin is influenced by jquery-json &#x28;http&#x3a;&#x2f;&#x2f;code.google.com&#x2f;p&#x2f;jquery-json&#x2f;&#x29;.&#xd;&#xa; &#x2a; If you&#x27;re looking to use native JSON.Stringify but want additional backwards&#xd;&#xa; &#x2a; compatibility for browsers that don&#x27;t support it, I highly recommend you&#xd;&#xa; &#x2a; check it out.&#xd;&#xa; &#x2a;&#xd;&#xa; &#x2a; A special thanks goes out to rwk&#x40;acm.org for providing a lot of valuable&#xd;&#xa; &#x2a; feedback to the project including the core for the new FSM&#xd;&#xa; &#x2a; &#x28;Finite State Machine&#x29; parsers. If you&#x27;re looking for a stable TSV parser&#xd;&#xa; &#x2a; be sure to take a look at jquery-tsv &#x28;http&#x3a;&#x2f;&#x2f;code.google.com&#x2f;p&#x2f;jquery-tsv&#x2f;&#x29;.&#xd;&#xa;&#xd;&#xa; &#x2a; For legal purposes I&#x27;ll include the &#x22;NO WARRANTY EXPRESSED OR IMPLIED.&#xd;&#xa; &#x2a; USE AT YOUR OWN RISK.&#x22;. Which, in &#x27;layman&#x27;s terms&#x27; means, by using this&#xd;&#xa; &#x2a; library you are accepting responsibility if it breaks your code.&#xd;&#xa; &#x2a;&#xd;&#xa; &#x2a; Legal jargon aside, I will do my best to provide a useful and stable core&#xd;&#xa; &#x2a; that can effectively be built on.&#xd;&#xa; &#x2a;&#xd;&#xa; &#x2a; Copyrighted 2012 by Evan Plaice.&#xd;&#xa; &#x2a;&#x2f;&#xd;&#xa;&#xd;&#xa;RegExp.escape&#x3d; function&#x28;s&#x29; &#x7b;&#xd;&#xa;    return s.replace&#x28;&#x2f;&#x5b;-&#x5c;&#x2f;&#x5c;&#x5c;&#x5e;&#x24;&#x2a;&#x2b;&#x3f;.&#x28;&#x29;&#x7c;&#x5b;&#x5c;&#x5d;&#x7b;&#x7d;&#x5d;&#x2f;g, &#x27;&#x5c;&#x5c;&#x24;&#x26;&#x27;&#x29;&#x3b;&#xd;&#xa;&#x7d;&#x3b;&#xd;&#xa;&#xd;&#xa;&#x28;function &#x28;undefined&#x29; &#x7b;&#xd;&#xa;  &#x27;use strict&#x27;&#xd;&#xa;&#xd;&#xa;  var &#x24;&#x3b;&#xd;&#xa;&#xd;&#xa;  &#x2f;&#x2f; to keep backwards compatibility&#xd;&#xa;  if &#x28;typeof jQuery &#x21;&#x3d;&#x3d; &#x27;undefined&#x27; &#x26;&#x26; jQuery&#x29; &#x7b;&#xd;&#xa;    &#x24; &#x3d; jQuery&#x3b;&#xd;&#xa;  &#x7d; else &#x7b;&#xd;&#xa;    &#x24; &#x3d; &#x7b;&#x7d;&#x3b;&#xd;&#xa;  &#x7d;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;  &#x2f;&#x2a;&#x2a;&#xd;&#xa;   &#x2a; jQuery.csv.defaults&#xd;&#xa;   &#x2a; Encapsulates the method paramater defaults for the CSV plugin module.&#xd;&#xa;   &#x2a;&#x2f;&#xd;&#xa;&#xd;&#xa;  &#x24;.csv &#x3d; &#x7b;&#xd;&#xa;    defaults&#x3a; &#x7b;&#xd;&#xa;      separator&#x3a;&#x27;,&#x27;,&#xd;&#xa;      delimiter&#x3a;&#x27;&#x22;&#x27;,&#xd;&#xa;      headers&#x3a;true&#xd;&#xa;    &#x7d;,&#xd;&#xa;&#xd;&#xa;    hooks&#x3a; &#x7b;&#xd;&#xa;      castToScalar&#x3a; function&#x28;value, state&#x29; &#x7b;&#xd;&#xa;        var hasDot &#x3d; &#x2f;&#x5c;.&#x2f;&#x3b;&#xd;&#xa;        if &#x28;isNaN&#x28;value&#x29;&#x29; &#x7b;&#xd;&#xa;          return value&#x3b;&#xd;&#xa;        &#x7d; else &#x7b;&#xd;&#xa;          if &#x28;hasDot.test&#x28;value&#x29;&#x29; &#x7b;&#xd;&#xa;            return parseFloat&#x28;value&#x29;&#x3b;&#xd;&#xa;          &#x7d; else &#x7b;&#xd;&#xa;            var integer &#x3d; parseInt&#x28;value&#x29;&#x3b;&#xd;&#xa;            if&#x28;isNaN&#x28;integer&#x29;&#x29; &#x7b;&#xd;&#xa;              return null&#x3b;&#xd;&#xa;            &#x7d; else &#x7b;&#xd;&#xa;              return integer&#x3b;&#xd;&#xa;            &#x7d;&#xd;&#xa;          &#x7d;&#xd;&#xa;        &#x7d;&#xd;&#xa;      &#x7d;&#xd;&#xa;    &#x7d;,&#xd;&#xa;&#xd;&#xa;    parsers&#x3a; &#x7b;&#xd;&#xa;      parse&#x3a; function&#x28;csv, options&#x29; &#x7b;&#xd;&#xa;        &#x2f;&#x2f; cache settings&#xd;&#xa;        var separator &#x3d; options.separator&#x3b;&#xd;&#xa;        var delimiter &#x3d; options.delimiter&#x3b;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; set initial state if it&#x27;s missing&#xd;&#xa;        if&#x28;&#x21;options.state.rowNum&#x29; &#x7b;&#xd;&#xa;          options.state.rowNum &#x3d; 1&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;        if&#x28;&#x21;options.state.colNum&#x29; &#x7b;&#xd;&#xa;          options.state.colNum &#x3d; 1&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; clear initial state&#xd;&#xa;        var data &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;        var entry &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;        var state &#x3d; 0&#x3b;&#xd;&#xa;        var value &#x3d; &#x27;&#x27;&#x3b;&#xd;&#xa;        var exit &#x3d; false&#x3b;&#xd;&#xa;&#xd;&#xa;        function endOfEntry&#x28;&#x29; &#x7b;&#xd;&#xa;          &#x2f;&#x2f; reset the state&#xd;&#xa;          state &#x3d; 0&#x3b;&#xd;&#xa;          value &#x3d; &#x27;&#x27;&#x3b;&#xd;&#xa;&#xd;&#xa;          &#x2f;&#x2f; if &#x27;start&#x27; hasn&#x27;t been met, don&#x27;t output&#xd;&#xa;          if&#x28;options.start &#x26;&#x26; options.state.rowNum &#x3c; options.start&#x29; &#x7b;&#xd;&#xa;            &#x2f;&#x2f; update global state&#xd;&#xa;            entry &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;            options.state.rowNum&#x2b;&#x2b;&#x3b;&#xd;&#xa;            options.state.colNum &#x3d; 1&#x3b;&#xd;&#xa;            return&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;&#xd;&#xa;          if&#x28;options.onParseEntry &#x3d;&#x3d;&#x3d; undefined&#x29; &#x7b;&#xd;&#xa;            &#x2f;&#x2f; onParseEntry hook not set&#xd;&#xa;            data.push&#x28;entry&#x29;&#x3b;&#xd;&#xa;          &#x7d; else &#x7b;&#xd;&#xa;            var hookVal &#x3d; options.onParseEntry&#x28;entry, options.state&#x29;&#x3b; &#x2f;&#x2f; onParseEntry Hook&#xd;&#xa;            &#x2f;&#x2f; false skips the row, configurable through a hook&#xd;&#xa;            if&#x28;hookVal &#x21;&#x3d;&#x3d; false&#x29; &#x7b;&#xd;&#xa;              data.push&#x28;hookVal&#x29;&#x3b;&#xd;&#xa;            &#x7d;&#xd;&#xa;          &#x7d;&#xd;&#xa;          &#x2f;&#x2f;console.log&#x28;&#x27;entry&#x3a;&#x27; &#x2b; entry&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;          &#x2f;&#x2f; cleanup&#xd;&#xa;          entry &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;&#xd;&#xa;          &#x2f;&#x2f; if &#x27;end&#x27; is met, stop parsing&#xd;&#xa;          if&#x28;options.end &#x26;&#x26; options.state.rowNum &#x3e;&#x3d; options.end&#x29; &#x7b;&#xd;&#xa;            exit &#x3d; true&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;&#xd;&#xa;          &#x2f;&#x2f; update global state&#xd;&#xa;          options.state.rowNum&#x2b;&#x2b;&#x3b;&#xd;&#xa;          options.state.colNum &#x3d; 1&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        function endOfValue&#x28;&#x29; &#x7b;&#xd;&#xa;          if&#x28;options.onParseValue &#x3d;&#x3d;&#x3d; undefined&#x29; &#x7b;&#xd;&#xa;            &#x2f;&#x2f; onParseValue hook not set&#xd;&#xa;            entry.push&#x28;value&#x29;&#x3b;&#xd;&#xa;          &#x7d; else &#x7b;&#xd;&#xa;            var hook &#x3d; options.onParseValue&#x28;value, options.state&#x29;&#x3b; &#x2f;&#x2f; onParseValue Hook&#xd;&#xa;            &#x2f;&#x2f; false skips the row, configurable through a hook&#xd;&#xa;            if&#x28;hook &#x21;&#x3d;&#x3d; false&#x29; &#x7b;&#xd;&#xa;              entry.push&#x28;hook&#x29;&#x3b;&#xd;&#xa;            &#x7d;&#xd;&#xa;          &#x7d;&#xd;&#xa;          &#x2f;&#x2f;console.log&#x28;&#x27;value&#x3a;&#x27; &#x2b; value&#x29;&#x3b;&#xd;&#xa;          &#x2f;&#x2f; reset the state&#xd;&#xa;          value &#x3d; &#x27;&#x27;&#x3b;&#xd;&#xa;          state &#x3d; 0&#x3b;&#xd;&#xa;          &#x2f;&#x2f; update global state&#xd;&#xa;          options.state.colNum&#x2b;&#x2b;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; escape regex-specific control chars&#xd;&#xa;        var escSeparator &#x3d; RegExp.escape&#x28;separator&#x29;&#x3b;&#xd;&#xa;        var escDelimiter &#x3d; RegExp.escape&#x28;delimiter&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; compile the regEx str using the custom delimiter&#x2f;separator&#xd;&#xa;        var match &#x3d; &#x2f;&#x28;D&#x7c;S&#x7c;&#x5c;r&#x5c;n&#x7c;&#x5c;n&#x7c;&#x5c;r&#x7c;&#x5b;&#x5e;DS&#x5c;r&#x5c;n&#x5d;&#x2b;&#x29;&#x2f;&#x3b;&#xd;&#xa;        var matchSrc &#x3d; match.source&#x3b;&#xd;&#xa;        matchSrc &#x3d; matchSrc.replace&#x28;&#x2f;S&#x2f;g, escSeparator&#x29;&#x3b;&#xd;&#xa;        matchSrc &#x3d; matchSrc.replace&#x28;&#x2f;D&#x2f;g, escDelimiter&#x29;&#x3b;&#xd;&#xa;        match &#x3d; RegExp&#x28;matchSrc, &#x27;gm&#x27;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; put on your fancy pants...&#xd;&#xa;        &#x2f;&#x2f; process control chars individually, use look-ahead on non-control chars&#xd;&#xa;        csv.replace&#x28;match, function &#x28;m0&#x29; &#x7b;&#xd;&#xa;          if&#x28;exit&#x29; &#x7b;&#xd;&#xa;            return&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;          switch &#x28;state&#x29; &#x7b;&#xd;&#xa;            &#x2f;&#x2f; the start of a value&#xd;&#xa;            case 0&#x3a;&#xd;&#xa;              &#x2f;&#x2f; null last value&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; separator&#x29; &#x7b;&#xd;&#xa;                value &#x2b;&#x3d; &#x27;&#x27;&#x3b;&#xd;&#xa;                endOfValue&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; opening delimiter&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;                state &#x3d; 1&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; null last value&#xd;&#xa;              if &#x28;&#x2f;&#x5e;&#x28;&#x5c;r&#x5c;n&#x7c;&#x5c;n&#x7c;&#x5c;r&#x29;&#x24;&#x2f;.test&#x28;m0&#x29;&#x29; &#x7b;&#xd;&#xa;                endOfValue&#x28;&#x29;&#x3b;&#xd;&#xa;                endOfEntry&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; un-delimited value&#xd;&#xa;              value &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;              state &#x3d; 3&#x3b;&#xd;&#xa;              break&#x3b;&#xd;&#xa;&#xd;&#xa;            &#x2f;&#x2f; delimited input&#xd;&#xa;            case 1&#x3a;&#xd;&#xa;              &#x2f;&#x2f; second delimiter&#x3f; check further&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;                state &#x3d; 2&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; delimited data&#xd;&#xa;              value &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;              state &#x3d; 1&#x3b;&#xd;&#xa;              break&#x3b;&#xd;&#xa;&#xd;&#xa;            &#x2f;&#x2f; delimiter found in delimited input&#xd;&#xa;            case 2&#x3a;&#xd;&#xa;              &#x2f;&#x2f; escaped delimiter&#x3f;&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;                value &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;                state &#x3d; 1&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; null value&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; separator&#x29; &#x7b;&#xd;&#xa;                endOfValue&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; end of entry&#xd;&#xa;              if &#x28;&#x2f;&#x5e;&#x28;&#x5c;r&#x5c;n&#x7c;&#x5c;n&#x7c;&#x5c;r&#x29;&#x24;&#x2f;.test&#x28;m0&#x29;&#x29; &#x7b;&#xd;&#xa;                endOfValue&#x28;&#x29;&#x3b;&#xd;&#xa;                endOfEntry&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; broken paser&#x3f;&#xd;&#xa;              throw new Error&#x28;&#x27;CSVDataError&#x3a; Illegal State &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x5b;Col&#x3a;&#x27; &#x2b; options.state.colNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;            &#x2f;&#x2f; un-delimited input&#xd;&#xa;            case 3&#x3a;&#xd;&#xa;              &#x2f;&#x2f; null last value&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; separator&#x29; &#x7b;&#xd;&#xa;                endOfValue&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; end of entry&#xd;&#xa;              if &#x28;&#x2f;&#x5e;&#x28;&#x5c;r&#x5c;n&#x7c;&#x5c;n&#x7c;&#x5c;r&#x29;&#x24;&#x2f;.test&#x28;m0&#x29;&#x29; &#x7b;&#xd;&#xa;                endOfValue&#x28;&#x29;&#x3b;&#xd;&#xa;                endOfEntry&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;              &#x2f;&#x2f; non-compliant data&#xd;&#xa;                throw new Error&#x28;&#x27;CSVDataError&#x3a; Illegal Quote &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x5b;Col&#x3a;&#x27; &#x2b; options.state.colNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; broken parser&#x3f;&#xd;&#xa;              throw new Error&#x28;&#x27;CSVDataError&#x3a; Illegal Data &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x5b;Col&#x3a;&#x27; &#x2b; options.state.colNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;            default&#x3a;&#xd;&#xa;              &#x2f;&#x2f; shenanigans&#xd;&#xa;              throw new Error&#x28;&#x27;CSVDataError&#x3a; Unknown State &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x5b;Col&#x3a;&#x27; &#x2b; options.state.colNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;          &#x2f;&#x2f;console.log&#x28;&#x27;val&#x3a;&#x27; &#x2b; m0 &#x2b; &#x27; state&#x3a;&#x27; &#x2b; state&#x29;&#x3b;&#xd;&#xa;        &#x7d;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; submit the last entry&#xd;&#xa;        &#x2f;&#x2f; ignore null last line&#xd;&#xa;        if&#x28;entry.length &#x21;&#x3d;&#x3d; 0&#x29; &#x7b;&#xd;&#xa;          endOfValue&#x28;&#x29;&#x3b;&#xd;&#xa;          endOfEntry&#x28;&#x29;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        return data&#x3b;&#xd;&#xa;      &#x7d;,&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; a csv-specific line splitter&#xd;&#xa;      splitLines&#x3a; function&#x28;csv, options&#x29; &#x7b;&#xd;&#xa;        &#x2f;&#x2f; cache settings&#xd;&#xa;        var separator &#x3d; options.separator&#x3b;&#xd;&#xa;        var delimiter &#x3d; options.delimiter&#x3b;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; set initial state if it&#x27;s missing&#xd;&#xa;        if&#x28;&#x21;options.state.rowNum&#x29; &#x7b;&#xd;&#xa;          options.state.rowNum &#x3d; 1&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; clear initial state&#xd;&#xa;        var entries &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;        var state &#x3d; 0&#x3b;&#xd;&#xa;        var entry &#x3d; &#x27;&#x27;&#x3b;&#xd;&#xa;        var exit &#x3d; false&#x3b;&#xd;&#xa;&#xd;&#xa;        function endOfLine&#x28;&#x29; &#x7b;&#xd;&#xa;          &#x2f;&#x2f; reset the state&#xd;&#xa;          state &#x3d; 0&#x3b;&#xd;&#xa;&#xd;&#xa;          &#x2f;&#x2f; if &#x27;start&#x27; hasn&#x27;t been met, don&#x27;t output&#xd;&#xa;          if&#x28;options.start &#x26;&#x26; options.state.rowNum &#x3c; options.start&#x29; &#x7b;&#xd;&#xa;            &#x2f;&#x2f; update global state&#xd;&#xa;            entry &#x3d; &#x27;&#x27;&#x3b;&#xd;&#xa;            options.state.rowNum&#x2b;&#x2b;&#x3b;&#xd;&#xa;            return&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;&#xd;&#xa;          if&#x28;options.onParseEntry &#x3d;&#x3d;&#x3d; undefined&#x29; &#x7b;&#xd;&#xa;            &#x2f;&#x2f; onParseEntry hook not set&#xd;&#xa;            entries.push&#x28;entry&#x29;&#x3b;&#xd;&#xa;          &#x7d; else &#x7b;&#xd;&#xa;            var hookVal &#x3d; options.onParseEntry&#x28;entry, options.state&#x29;&#x3b; &#x2f;&#x2f; onParseEntry Hook&#xd;&#xa;            &#x2f;&#x2f; false skips the row, configurable through a hook&#xd;&#xa;            if&#x28;hookVal &#x21;&#x3d;&#x3d; false&#x29; &#x7b;&#xd;&#xa;              entries.push&#x28;hookVal&#x29;&#x3b;&#xd;&#xa;            &#x7d;&#xd;&#xa;          &#x7d;&#xd;&#xa;&#xd;&#xa;          &#x2f;&#x2f; cleanup&#xd;&#xa;          entry &#x3d; &#x27;&#x27;&#x3b;&#xd;&#xa;&#xd;&#xa;          &#x2f;&#x2f; if &#x27;end&#x27; is met, stop parsing&#xd;&#xa;          if&#x28;options.end &#x26;&#x26; options.state.rowNum &#x3e;&#x3d; options.end&#x29; &#x7b;&#xd;&#xa;            exit &#x3d; true&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;&#xd;&#xa;          &#x2f;&#x2f; update global state&#xd;&#xa;          options.state.rowNum&#x2b;&#x2b;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; escape regex-specific control chars&#xd;&#xa;        var escSeparator &#x3d; RegExp.escape&#x28;separator&#x29;&#x3b;&#xd;&#xa;        var escDelimiter &#x3d; RegExp.escape&#x28;delimiter&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; compile the regEx str using the custom delimiter&#x2f;separator&#xd;&#xa;        var match &#x3d; &#x2f;&#x28;D&#x7c;S&#x7c;&#x5c;n&#x7c;&#x5c;r&#x7c;&#x5b;&#x5e;DS&#x5c;r&#x5c;n&#x5d;&#x2b;&#x29;&#x2f;&#x3b;&#xd;&#xa;        var matchSrc &#x3d; match.source&#x3b;&#xd;&#xa;        matchSrc &#x3d; matchSrc.replace&#x28;&#x2f;S&#x2f;g, escSeparator&#x29;&#x3b;&#xd;&#xa;        matchSrc &#x3d; matchSrc.replace&#x28;&#x2f;D&#x2f;g, escDelimiter&#x29;&#x3b;&#xd;&#xa;        match &#x3d; RegExp&#x28;matchSrc, &#x27;gm&#x27;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; put on your fancy pants...&#xd;&#xa;        &#x2f;&#x2f; process control chars individually, use look-ahead on non-control chars&#xd;&#xa;        csv.replace&#x28;match, function &#x28;m0&#x29; &#x7b;&#xd;&#xa;          if&#x28;exit&#x29; &#x7b;&#xd;&#xa;            return&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;          switch &#x28;state&#x29; &#x7b;&#xd;&#xa;            &#x2f;&#x2f; the start of a value&#x2f;entry&#xd;&#xa;            case 0&#x3a;&#xd;&#xa;              &#x2f;&#x2f; null value&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; separator&#x29; &#x7b;&#xd;&#xa;                entry &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;                state &#x3d; 0&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; opening delimiter&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;                entry &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;                state &#x3d; 1&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; end of line&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; &#x27;&#x5c;n&#x27;&#x29; &#x7b;&#xd;&#xa;                endOfLine&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; phantom carriage return&#xd;&#xa;              if &#x28;&#x2f;&#x5e;&#x5c;r&#x24;&#x2f;.test&#x28;m0&#x29;&#x29; &#x7b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; un-delimit value&#xd;&#xa;              entry &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;              state &#x3d; 3&#x3b;&#xd;&#xa;              break&#x3b;&#xd;&#xa;&#xd;&#xa;            &#x2f;&#x2f; delimited input&#xd;&#xa;            case 1&#x3a;&#xd;&#xa;              &#x2f;&#x2f; second delimiter&#x3f; check further&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;                entry &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;                state &#x3d; 2&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; delimited data&#xd;&#xa;              entry &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;              state &#x3d; 1&#x3b;&#xd;&#xa;              break&#x3b;&#xd;&#xa;&#xd;&#xa;            &#x2f;&#x2f; delimiter found in delimited input&#xd;&#xa;            case 2&#x3a;&#xd;&#xa;              &#x2f;&#x2f; escaped delimiter&#x3f;&#xd;&#xa;              var prevChar &#x3d; entry.substr&#x28;entry.length - 1&#x29;&#x3b;&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter &#x26;&#x26; prevChar &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;                entry &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;                state &#x3d; 1&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; end of value&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; separator&#x29; &#x7b;&#xd;&#xa;                entry &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;                state &#x3d; 0&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; end of line&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; &#x27;&#x5c;n&#x27;&#x29; &#x7b;&#xd;&#xa;                endOfLine&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; phantom carriage return&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; &#x27;&#x5c;r&#x27;&#x29; &#x7b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; broken paser&#x3f;&#xd;&#xa;              throw new Error&#x28;&#x27;CSVDataError&#x3a; Illegal state &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;            &#x2f;&#x2f; un-delimited input&#xd;&#xa;            case 3&#x3a;&#xd;&#xa;              &#x2f;&#x2f; null value&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; separator&#x29; &#x7b;&#xd;&#xa;                entry &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;                state &#x3d; 0&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; end of line&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; &#x27;&#x5c;n&#x27;&#x29; &#x7b;&#xd;&#xa;                endOfLine&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; phantom carriage return&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; &#x27;&#x5c;r&#x27;&#x29; &#x7b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; non-compliant data&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;                throw new Error&#x28;&#x27;CSVDataError&#x3a; Illegal quote &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; broken parser&#x3f;&#xd;&#xa;              throw new Error&#x28;&#x27;CSVDataError&#x3a; Illegal state &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;            default&#x3a;&#xd;&#xa;              &#x2f;&#x2f; shenanigans&#xd;&#xa;              throw new Error&#x28;&#x27;CSVDataError&#x3a; Unknown state &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;          &#x2f;&#x2f;console.log&#x28;&#x27;val&#x3a;&#x27; &#x2b; m0 &#x2b; &#x27; state&#x3a;&#x27; &#x2b; state&#x29;&#x3b;&#xd;&#xa;        &#x7d;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; submit the last entry&#xd;&#xa;        &#x2f;&#x2f; ignore null last line&#xd;&#xa;        if&#x28;entry &#x21;&#x3d;&#x3d; &#x27;&#x27;&#x29; &#x7b;&#xd;&#xa;          endOfLine&#x28;&#x29;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        return entries&#x3b;&#xd;&#xa;      &#x7d;,&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; a csv entry parser&#xd;&#xa;      parseEntry&#x3a; function&#x28;csv, options&#x29; &#x7b;&#xd;&#xa;        &#x2f;&#x2f; cache settings&#xd;&#xa;        var separator &#x3d; options.separator&#x3b;&#xd;&#xa;        var delimiter &#x3d; options.delimiter&#x3b;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; set initial state if it&#x27;s missing&#xd;&#xa;        if&#x28;&#x21;options.state.rowNum&#x29; &#x7b;&#xd;&#xa;          options.state.rowNum &#x3d; 1&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;        if&#x28;&#x21;options.state.colNum&#x29; &#x7b;&#xd;&#xa;          options.state.colNum &#x3d; 1&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; clear initial state&#xd;&#xa;        var entry &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;        var state &#x3d; 0&#x3b;&#xd;&#xa;        var value &#x3d; &#x27;&#x27;&#x3b;&#xd;&#xa;&#xd;&#xa;        function endOfValue&#x28;&#x29; &#x7b;&#xd;&#xa;          if&#x28;options.onParseValue &#x3d;&#x3d;&#x3d; undefined&#x29; &#x7b;&#xd;&#xa;            &#x2f;&#x2f; onParseValue hook not set&#xd;&#xa;            entry.push&#x28;value&#x29;&#x3b;&#xd;&#xa;          &#x7d; else &#x7b;&#xd;&#xa;            var hook &#x3d; options.onParseValue&#x28;value, options.state&#x29;&#x3b; &#x2f;&#x2f; onParseValue Hook&#xd;&#xa;            &#x2f;&#x2f; false skips the value, configurable through a hook&#xd;&#xa;            if&#x28;hook &#x21;&#x3d;&#x3d; false&#x29; &#x7b;&#xd;&#xa;              entry.push&#x28;hook&#x29;&#x3b;&#xd;&#xa;            &#x7d;&#xd;&#xa;          &#x7d;&#xd;&#xa;          &#x2f;&#x2f; reset the state&#xd;&#xa;          value &#x3d; &#x27;&#x27;&#x3b;&#xd;&#xa;          state &#x3d; 0&#x3b;&#xd;&#xa;          &#x2f;&#x2f; update global state&#xd;&#xa;          options.state.colNum&#x2b;&#x2b;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; checked for a cached regEx first&#xd;&#xa;        if&#x28;&#x21;options.match&#x29; &#x7b;&#xd;&#xa;          &#x2f;&#x2f; escape regex-specific control chars&#xd;&#xa;          var escSeparator &#x3d; RegExp.escape&#x28;separator&#x29;&#x3b;&#xd;&#xa;          var escDelimiter &#x3d; RegExp.escape&#x28;delimiter&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;          &#x2f;&#x2f; compile the regEx str using the custom delimiter&#x2f;separator&#xd;&#xa;          var match &#x3d; &#x2f;&#x28;D&#x7c;S&#x7c;&#x5c;n&#x7c;&#x5c;r&#x7c;&#x5b;&#x5e;DS&#x5c;r&#x5c;n&#x5d;&#x2b;&#x29;&#x2f;&#x3b;&#xd;&#xa;          var matchSrc &#x3d; match.source&#x3b;&#xd;&#xa;          matchSrc &#x3d; matchSrc.replace&#x28;&#x2f;S&#x2f;g, escSeparator&#x29;&#x3b;&#xd;&#xa;          matchSrc &#x3d; matchSrc.replace&#x28;&#x2f;D&#x2f;g, escDelimiter&#x29;&#x3b;&#xd;&#xa;          options.match &#x3d; RegExp&#x28;matchSrc, &#x27;gm&#x27;&#x29;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; put on your fancy pants...&#xd;&#xa;        &#x2f;&#x2f; process control chars individually, use look-ahead on non-control chars&#xd;&#xa;        csv.replace&#x28;options.match, function &#x28;m0&#x29; &#x7b;&#xd;&#xa;          switch &#x28;state&#x29; &#x7b;&#xd;&#xa;            &#x2f;&#x2f; the start of a value&#xd;&#xa;            case 0&#x3a;&#xd;&#xa;              &#x2f;&#x2f; null last value&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; separator&#x29; &#x7b;&#xd;&#xa;                value &#x2b;&#x3d; &#x27;&#x27;&#x3b;&#xd;&#xa;                endOfValue&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; opening delimiter&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;                state &#x3d; 1&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; skip un-delimited new-lines&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; &#x27;&#x5c;n&#x27; &#x7c;&#x7c; m0 &#x3d;&#x3d;&#x3d; &#x27;&#x5c;r&#x27;&#x29; &#x7b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; un-delimited value&#xd;&#xa;              value &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;              state &#x3d; 3&#x3b;&#xd;&#xa;              break&#x3b;&#xd;&#xa;&#xd;&#xa;            &#x2f;&#x2f; delimited input&#xd;&#xa;            case 1&#x3a;&#xd;&#xa;              &#x2f;&#x2f; second delimiter&#x3f; check further&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;                state &#x3d; 2&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; delimited data&#xd;&#xa;              value &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;              state &#x3d; 1&#x3b;&#xd;&#xa;              break&#x3b;&#xd;&#xa;&#xd;&#xa;            &#x2f;&#x2f; delimiter found in delimited input&#xd;&#xa;            case 2&#x3a;&#xd;&#xa;              &#x2f;&#x2f; escaped delimiter&#x3f;&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;                value &#x2b;&#x3d; m0&#x3b;&#xd;&#xa;                state &#x3d; 1&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; null value&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; separator&#x29; &#x7b;&#xd;&#xa;                endOfValue&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; skip un-delimited new-lines&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; &#x27;&#x5c;n&#x27; &#x7c;&#x7c; m0 &#x3d;&#x3d;&#x3d; &#x27;&#x5c;r&#x27;&#x29; &#x7b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; broken paser&#x3f;&#xd;&#xa;              throw new Error&#x28;&#x27;CSVDataError&#x3a; Illegal State &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x5b;Col&#x3a;&#x27; &#x2b; options.state.colNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;            &#x2f;&#x2f; un-delimited input&#xd;&#xa;            case 3&#x3a;&#xd;&#xa;              &#x2f;&#x2f; null last value&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; separator&#x29; &#x7b;&#xd;&#xa;                endOfValue&#x28;&#x29;&#x3b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; skip un-delimited new-lines&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; &#x27;&#x5c;n&#x27; &#x7c;&#x7c; m0 &#x3d;&#x3d;&#x3d; &#x27;&#x5c;r&#x27;&#x29; &#x7b;&#xd;&#xa;                break&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; non-compliant data&#xd;&#xa;              if &#x28;m0 &#x3d;&#x3d;&#x3d; delimiter&#x29; &#x7b;&#xd;&#xa;                throw new Error&#x28;&#x27;CSVDataError&#x3a; Illegal Quote &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x5b;Col&#x3a;&#x27; &#x2b; options.state.colNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;              &#x7d;&#xd;&#xa;              &#x2f;&#x2f; broken parser&#x3f;&#xd;&#xa;              throw new Error&#x28;&#x27;CSVDataError&#x3a; Illegal Data &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x5b;Col&#x3a;&#x27; &#x2b; options.state.colNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;            default&#x3a;&#xd;&#xa;              &#x2f;&#x2f; shenanigans&#xd;&#xa;              throw new Error&#x28;&#x27;CSVDataError&#x3a; Unknown State &#x5b;Row&#x3a;&#x27; &#x2b; options.state.rowNum &#x2b; &#x27;&#x5d;&#x5b;Col&#x3a;&#x27; &#x2b; options.state.colNum &#x2b; &#x27;&#x5d;&#x27;&#x29;&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;          &#x2f;&#x2f;console.log&#x28;&#x27;val&#x3a;&#x27; &#x2b; m0 &#x2b; &#x27; state&#x3a;&#x27; &#x2b; state&#x29;&#x3b;&#xd;&#xa;        &#x7d;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; submit the last value&#xd;&#xa;        endOfValue&#x28;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;        return entry&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;    &#x7d;,&#xd;&#xa;&#xd;&#xa;    helpers&#x3a; &#x7b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2a;&#x2a;&#xd;&#xa;       &#x2a; &#x24;.csv.helpers.collectPropertyNames&#x28;objectsArray&#x29;&#xd;&#xa;       &#x2a; Collects all unique property names from all passed objects.&#xd;&#xa;       &#x2a;&#xd;&#xa;       &#x2a; &#x40;param &#x7b;Array&#x7d; objects Objects to collect properties from.&#xd;&#xa;       &#x2a;&#xd;&#xa;       &#x2a; Returns an array of property names &#x28;array will be empty,&#xd;&#xa;       &#x2a; if objects have no own properties&#x29;.&#xd;&#xa;       &#x2a;&#x2f;&#xd;&#xa;      collectPropertyNames&#x3a; function &#x28;objects&#x29; &#x7b;&#xd;&#xa;&#xd;&#xa;        var o, propName, props &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;        for &#x28;o in objects&#x29; &#x7b;&#xd;&#xa;          for &#x28;propName in objects&#x5b;o&#x5d;&#x29; &#x7b;&#xd;&#xa;            if &#x28;&#x28;objects&#x5b;o&#x5d;.hasOwnProperty&#x28;propName&#x29;&#x29;&#xd;&#xa;                &#x26;&#x26; &#x28;props.indexOf&#x28;propName&#x29; &#x3c; 0&#x29;&#xd;&#xa;                &#x26;&#x26; &#x28;typeof objects&#x5b;o&#x5d;&#x5b;propName&#x5d; &#x21;&#x3d;&#x3d; &#x27;function&#x27;&#x29;&#x29; &#x7b;&#xd;&#xa;&#xd;&#xa;              props.push&#x28;propName&#x29;&#x3b;&#xd;&#xa;            &#x7d;&#xd;&#xa;          &#x7d;&#xd;&#xa;        &#x7d;&#xd;&#xa;        return props&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;    &#x7d;,&#xd;&#xa;&#xd;&#xa;    &#x2f;&#x2a;&#x2a;&#xd;&#xa;     &#x2a; &#x24;.csv.toArray&#x28;csv&#x29;&#xd;&#xa;     &#x2a; Converts a CSV entry string to a javascript array.&#xd;&#xa;     &#x2a;&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Array&#x7d; csv The string containing the CSV data.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Object&#x7d; &#x5b;options&#x5d; An object containing user-defined options.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character&#x7d; &#x5b;separator&#x5d; An override for the separator character. Defaults to a comma&#x28;,&#x29;.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character&#x7d; &#x5b;delimiter&#x5d; An override for the delimiter character. Defaults to a double-quote&#x28;&#x22;&#x29;.&#xd;&#xa;     &#x2a;&#xd;&#xa;     &#x2a; This method deals with simple CSV strings only. It&#x27;s useful if you only&#xd;&#xa;     &#x2a; need to parse a single entry. If you need to parse more than one line,&#xd;&#xa;     &#x2a; use &#x24;.csv2Array instead.&#xd;&#xa;     &#x2a;&#x2f;&#xd;&#xa;    toArray&#x3a; function&#x28;csv, options, callback&#x29; &#x7b;&#xd;&#xa;      var options &#x3d; &#x28;options &#x21;&#x3d;&#x3d; undefined &#x3f; options &#x3a; &#x7b;&#x7d;&#x29;&#x3b;&#xd;&#xa;      var config &#x3d; &#x7b;&#x7d;&#x3b;&#xd;&#xa;      config.callback &#x3d; &#x28;&#x28;callback &#x21;&#x3d;&#x3d; undefined &#x26;&#x26; typeof&#x28;callback&#x29; &#x3d;&#x3d;&#x3d; &#x27;function&#x27;&#x29; &#x3f; callback &#x3a; false&#x29;&#x3b;&#xd;&#xa;      config.separator &#x3d; &#x27;separator&#x27; in options &#x3f; options.separator &#x3a; &#x24;.csv.defaults.separator&#x3b;&#xd;&#xa;      config.delimiter &#x3d; &#x27;delimiter&#x27; in options &#x3f; options.delimiter &#x3a; &#x24;.csv.defaults.delimiter&#x3b;&#xd;&#xa;      var state &#x3d; &#x28;options.state &#x21;&#x3d;&#x3d; undefined &#x3f; options.state &#x3a; &#x7b;&#x7d;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; setup&#xd;&#xa;      var options &#x3d; &#x7b;&#xd;&#xa;        delimiter&#x3a; config.delimiter,&#xd;&#xa;        separator&#x3a; config.separator,&#xd;&#xa;        onParseEntry&#x3a; options.onParseEntry,&#xd;&#xa;        onParseValue&#x3a; options.onParseValue,&#xd;&#xa;        state&#x3a; state&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      var entry &#x3d; &#x24;.csv.parsers.parseEntry&#x28;csv, options&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; push the value to a callback if one is defined&#xd;&#xa;      if&#x28;&#x21;config.callback&#x29; &#x7b;&#xd;&#xa;        return entry&#x3b;&#xd;&#xa;      &#x7d; else &#x7b;&#xd;&#xa;        config.callback&#x28;&#x27;&#x27;, entry&#x29;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;    &#x7d;,&#xd;&#xa;&#xd;&#xa;    &#x2f;&#x2a;&#x2a;&#xd;&#xa;     &#x2a; &#x24;.csv.toArrays&#x28;csv&#x29;&#xd;&#xa;     &#x2a; Converts a CSV string to a javascript array.&#xd;&#xa;     &#x2a;&#xd;&#xa;     &#x2a; &#x40;param &#x7b;String&#x7d; csv The string containing the raw CSV data.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Object&#x7d; &#x5b;options&#x5d; An object containing user-defined options.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character&#x7d; &#x5b;separator&#x5d; An override for the separator character. Defaults to a comma&#x28;,&#x29;.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character&#x7d; &#x5b;delimiter&#x5d; An override for the delimiter character. Defaults to a double-quote&#x28;&#x22;&#x29;.&#xd;&#xa;     &#x2a;&#xd;&#xa;     &#x2a; This method deals with multi-line CSV. The breakdown is simple. The first&#xd;&#xa;     &#x2a; dimension of the array represents the line &#x28;or entry&#x2f;row&#x29; while the second&#xd;&#xa;     &#x2a; dimension contains the values &#x28;or values&#x2f;columns&#x29;.&#xd;&#xa;     &#x2a;&#x2f;&#xd;&#xa;    toArrays&#x3a; function&#x28;csv, options, callback&#x29; &#x7b;&#xd;&#xa;      var options &#x3d; &#x28;options &#x21;&#x3d;&#x3d; undefined &#x3f; options &#x3a; &#x7b;&#x7d;&#x29;&#x3b;&#xd;&#xa;      var config &#x3d; &#x7b;&#x7d;&#x3b;&#xd;&#xa;      config.callback &#x3d; &#x28;&#x28;callback &#x21;&#x3d;&#x3d; undefined &#x26;&#x26; typeof&#x28;callback&#x29; &#x3d;&#x3d;&#x3d; &#x27;function&#x27;&#x29; &#x3f; callback &#x3a; false&#x29;&#x3b;&#xd;&#xa;      config.separator &#x3d; &#x27;separator&#x27; in options &#x3f; options.separator &#x3a; &#x24;.csv.defaults.separator&#x3b;&#xd;&#xa;      config.delimiter &#x3d; &#x27;delimiter&#x27; in options &#x3f; options.delimiter &#x3a; &#x24;.csv.defaults.delimiter&#x3b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; setup&#xd;&#xa;      var data &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;      var options &#x3d; &#x7b;&#xd;&#xa;        delimiter&#x3a; config.delimiter,&#xd;&#xa;        separator&#x3a; config.separator,&#xd;&#xa;        onPreParse&#x3a; options.onPreParse,&#xd;&#xa;        onParseEntry&#x3a; options.onParseEntry,&#xd;&#xa;        onParseValue&#x3a; options.onParseValue,&#xd;&#xa;        onPostParse&#x3a; options.onPostParse,&#xd;&#xa;        start&#x3a; options.start,&#xd;&#xa;        end&#x3a; options.end,&#xd;&#xa;        state&#x3a; &#x7b;&#xd;&#xa;          rowNum&#x3a; 1,&#xd;&#xa;          colNum&#x3a; 1&#xd;&#xa;        &#x7d;&#xd;&#xa;      &#x7d;&#x3b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; onPreParse hook&#xd;&#xa;      if&#x28;options.onPreParse &#x21;&#x3d;&#x3d; undefined&#x29; &#x7b;&#xd;&#xa;        options.onPreParse&#x28;csv, options.state&#x29;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; parse the data&#xd;&#xa;      data &#x3d; &#x24;.csv.parsers.parse&#x28;csv, options&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; onPostParse hook&#xd;&#xa;      if&#x28;options.onPostParse &#x21;&#x3d;&#x3d; undefined&#x29; &#x7b;&#xd;&#xa;        options.onPostParse&#x28;data, options.state&#x29;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; push the value to a callback if one is defined&#xd;&#xa;      if&#x28;&#x21;config.callback&#x29; &#x7b;&#xd;&#xa;        return data&#x3b;&#xd;&#xa;      &#x7d; else &#x7b;&#xd;&#xa;        config.callback&#x28;&#x27;&#x27;, data&#x29;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;    &#x7d;,&#xd;&#xa;&#xd;&#xa;    &#x2f;&#x2a;&#x2a;&#xd;&#xa;     &#x2a; &#x24;.csv.toObjects&#x28;csv&#x29;&#xd;&#xa;     &#x2a; Converts a CSV string to a javascript object.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;String&#x7d; csv The string containing the raw CSV data.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Object&#x7d; &#x5b;options&#x5d; An object containing user-defined options.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character&#x7d; &#x5b;separator&#x5d; An override for the separator character. Defaults to a comma&#x28;,&#x29;.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character&#x7d; &#x5b;delimiter&#x5d; An override for the delimiter character. Defaults to a double-quote&#x28;&#x22;&#x29;.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Boolean&#x7d; &#x5b;headers&#x5d; Indicates whether the data contains a header line. Defaults to true.&#xd;&#xa;     &#x2a;&#xd;&#xa;     &#x2a; This method deals with multi-line CSV strings. Where the headers line is&#xd;&#xa;     &#x2a; used as the key for each value per entry.&#xd;&#xa;     &#x2a;&#x2f;&#xd;&#xa;    toObjects&#x3a; function&#x28;csv, options, callback&#x29; &#x7b;&#xd;&#xa;      var options &#x3d; &#x28;options &#x21;&#x3d;&#x3d; undefined &#x3f; options &#x3a; &#x7b;&#x7d;&#x29;&#x3b;&#xd;&#xa;      var config &#x3d; &#x7b;&#x7d;&#x3b;&#xd;&#xa;      config.callback &#x3d; &#x28;&#x28;callback &#x21;&#x3d;&#x3d; undefined &#x26;&#x26; typeof&#x28;callback&#x29; &#x3d;&#x3d;&#x3d; &#x27;function&#x27;&#x29; &#x3f; callback &#x3a; false&#x29;&#x3b;&#xd;&#xa;      config.separator &#x3d; &#x27;separator&#x27; in options &#x3f; options.separator &#x3a; &#x24;.csv.defaults.separator&#x3b;&#xd;&#xa;      config.delimiter &#x3d; &#x27;delimiter&#x27; in options &#x3f; options.delimiter &#x3a; &#x24;.csv.defaults.delimiter&#x3b;&#xd;&#xa;      config.headers &#x3d; &#x27;headers&#x27; in options &#x3f; options.headers &#x3a; &#x24;.csv.defaults.headers&#x3b;&#xd;&#xa;      options.start &#x3d; &#x27;start&#x27; in options &#x3f; options.start &#x3a; 1&#x3b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; account for headers&#xd;&#xa;      if&#x28;config.headers&#x29; &#x7b;&#xd;&#xa;        options.start&#x2b;&#x2b;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;      if&#x28;options.end &#x26;&#x26; config.headers&#x29; &#x7b;&#xd;&#xa;        options.end&#x2b;&#x2b;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; setup&#xd;&#xa;      var lines &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;      var data &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;&#xd;&#xa;      var options &#x3d; &#x7b;&#xd;&#xa;        delimiter&#x3a; config.delimiter,&#xd;&#xa;        separator&#x3a; config.separator,&#xd;&#xa;        onPreParse&#x3a; options.onPreParse,&#xd;&#xa;        onParseEntry&#x3a; options.onParseEntry,&#xd;&#xa;        onParseValue&#x3a; options.onParseValue,&#xd;&#xa;        onPostParse&#x3a; options.onPostParse,&#xd;&#xa;        start&#x3a; options.start,&#xd;&#xa;        end&#x3a; options.end,&#xd;&#xa;        state&#x3a; &#x7b;&#xd;&#xa;          rowNum&#x3a; 1,&#xd;&#xa;          colNum&#x3a; 1&#xd;&#xa;        &#x7d;,&#xd;&#xa;        match&#x3a; false,&#xd;&#xa;        transform&#x3a; options.transform&#xd;&#xa;      &#x7d;&#x3b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; fetch the headers&#xd;&#xa;      var headerOptions &#x3d; &#x7b;&#xd;&#xa;        delimiter&#x3a; config.delimiter,&#xd;&#xa;        separator&#x3a; config.separator,&#xd;&#xa;        start&#x3a; 1,&#xd;&#xa;        end&#x3a; 1,&#xd;&#xa;        state&#x3a; &#x7b;&#xd;&#xa;          rowNum&#x3a;1,&#xd;&#xa;          colNum&#x3a;1&#xd;&#xa;        &#x7d;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; onPreParse hook&#xd;&#xa;      if&#x28;options.onPreParse &#x21;&#x3d;&#x3d; undefined&#x29; &#x7b;&#xd;&#xa;        options.onPreParse&#x28;csv, options.state&#x29;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; parse the csv&#xd;&#xa;      var headerLine &#x3d; &#x24;.csv.parsers.splitLines&#x28;csv, headerOptions&#x29;&#x3b;&#xd;&#xa;      var headers &#x3d; &#x24;.csv.toArray&#x28;headerLine&#x5b;0&#x5d;, options&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; fetch the data&#xd;&#xa;      var lines &#x3d; &#x24;.csv.parsers.splitLines&#x28;csv, options&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; reset the state for re-use&#xd;&#xa;      options.state.colNum &#x3d; 1&#x3b;&#xd;&#xa;      if&#x28;headers&#x29;&#x7b;&#xd;&#xa;        options.state.rowNum &#x3d; 2&#x3b;&#xd;&#xa;      &#x7d; else &#x7b;&#xd;&#xa;        options.state.rowNum &#x3d; 1&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; convert data to objects&#xd;&#xa;      for&#x28;var i&#x3d;0, len&#x3d;lines.length&#x3b; i&#x3c;len&#x3b; i&#x2b;&#x2b;&#x29; &#x7b;&#xd;&#xa;        var entry &#x3d; &#x24;.csv.toArray&#x28;lines&#x5b;i&#x5d;, options&#x29;&#x3b;&#xd;&#xa;        var object &#x3d; &#x7b;&#x7d;&#x3b;&#xd;&#xa;        for&#x28;var j in headers&#x29; &#x7b;&#xd;&#xa;          object&#x5b;headers&#x5b;j&#x5d;&#x5d; &#x3d; entry&#x5b;j&#x5d;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;        if &#x28;options.transform &#x21;&#x3d;&#x3d; undefined&#x29; &#x7b;&#xd;&#xa;          data.push&#x28;options.transform.call&#x28;undefined, object&#x29;&#x29;&#x3b;&#xd;&#xa;        &#x7d; else &#x7b;&#xd;&#xa;          data.push&#x28;object&#x29;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;&#xd;&#xa;        &#x2f;&#x2f; update row state&#xd;&#xa;        options.state.rowNum&#x2b;&#x2b;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; onPostParse hook&#xd;&#xa;      if&#x28;options.onPostParse &#x21;&#x3d;&#x3d; undefined&#x29; &#x7b;&#xd;&#xa;        options.onPostParse&#x28;data, options.state&#x29;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; push the value to a callback if one is defined&#xd;&#xa;      if&#x28;&#x21;config.callback&#x29; &#x7b;&#xd;&#xa;        return data&#x3b;&#xd;&#xa;      &#x7d; else &#x7b;&#xd;&#xa;        config.callback&#x28;&#x27;&#x27;, data&#x29;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;    &#x7d;,&#xd;&#xa;&#xd;&#xa;     &#x2f;&#x2a;&#x2a;&#xd;&#xa;     &#x2a; &#x24;.csv.fromArrays&#x28;arrays&#x29;&#xd;&#xa;     &#x2a; Converts a javascript array to a CSV String.&#xd;&#xa;     &#x2a;&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Array&#x7d; arrays An array containing an array of CSV entries.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Object&#x7d; &#x5b;options&#x5d; An object containing user-defined options.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character&#x7d; &#x5b;separator&#x5d; An override for the separator character. Defaults to a comma&#x28;,&#x29;.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character&#x7d; &#x5b;delimiter&#x5d; An override for the delimiter character. Defaults to a double-quote&#x28;&#x22;&#x29;.&#xd;&#xa;     &#x2a;&#xd;&#xa;     &#x2a; This method generates a CSV file from an array of arrays &#x28;representing entries&#x29;.&#xd;&#xa;     &#x2a;&#x2f;&#xd;&#xa;    fromArrays&#x3a; function&#x28;arrays, options, callback&#x29; &#x7b;&#xd;&#xa;      var options &#x3d; &#x28;options &#x21;&#x3d;&#x3d; undefined &#x3f; options &#x3a; &#x7b;&#x7d;&#x29;&#x3b;&#xd;&#xa;      var config &#x3d; &#x7b;&#x7d;&#x3b;&#xd;&#xa;      config.callback &#x3d; &#x28;&#x28;callback &#x21;&#x3d;&#x3d; undefined &#x26;&#x26; typeof&#x28;callback&#x29; &#x3d;&#x3d;&#x3d; &#x27;function&#x27;&#x29; &#x3f; callback &#x3a; false&#x29;&#x3b;&#xd;&#xa;      config.separator &#x3d; &#x27;separator&#x27; in options &#x3f; options.separator &#x3a; &#x24;.csv.defaults.separator&#x3b;&#xd;&#xa;      config.delimiter &#x3d; &#x27;delimiter&#x27; in options &#x3f; options.delimiter &#x3a; &#x24;.csv.defaults.delimiter&#x3b;&#xd;&#xa;&#xd;&#xa;      var output &#x3d; &#x27;&#x27;,&#xd;&#xa;          line,&#xd;&#xa;          lineValues,&#xd;&#xa;          i, j&#x3b;&#xd;&#xa;&#xd;&#xa;      for &#x28;i &#x3d; 0&#x3b; i &#x3c; arrays.length&#x3b; i&#x2b;&#x2b;&#x29; &#x7b;&#xd;&#xa;        line &#x3d; arrays&#x5b;i&#x5d;&#x3b;&#xd;&#xa;        lineValues &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;        for &#x28;j &#x3d; 0&#x3b; j &#x3c; line.length&#x3b; j&#x2b;&#x2b;&#x29; &#x7b;&#xd;&#xa;          var strValue &#x3d; &#x28;line&#x5b;j&#x5d; &#x3d;&#x3d;&#x3d; undefined &#x7c;&#x7c; line&#x5b;j&#x5d; &#x3d;&#x3d;&#x3d; null&#x29;&#xd;&#xa;                       &#x3f; &#x27;&#x27;&#xd;&#xa;                       &#x3a; line&#x5b;j&#x5d;.toString&#x28;&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;          &#x2f;&#x2f; MODIFICATION by Eric&#x3a;&#xd;&#xa;          &#x2f;&#x2f; make the delimiter replacement global&#xd;&#xa;          &#x2f;&#x2f; &#x28;workaround until jquery-csv is replaced entirely&#x29;&#xd;&#xa;          if &#x28;strValue.indexOf&#x28;config.delimiter&#x29; &#x3e; -1&#x29; &#x7b;&#xd;&#xa;            var delRegex &#x3d; new RegExp&#x28;config.delimiter, &#x22;g&#x22;&#x29;&#x3b;&#xd;&#xa;            strValue &#x3d; strValue.replace&#x28;delRegex, config.delimiter &#x2b; config.delimiter&#x29;&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;&#xd;&#xa;          var escMatcher &#x3d; &#x27;&#x5c;n&#x7c;&#x5c;r&#x7c;S&#x7c;D&#x27;&#x3b;&#xd;&#xa;          escMatcher &#x3d; escMatcher.replace&#x28;&#x27;S&#x27;, config.separator&#x29;&#x3b;&#xd;&#xa;          escMatcher &#x3d; escMatcher.replace&#x28;&#x27;D&#x27;, config.delimiter&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;          if &#x28;strValue.search&#x28;escMatcher&#x29; &#x3e; -1&#x29; &#x7b;&#xd;&#xa;            strValue &#x3d; config.delimiter &#x2b; strValue &#x2b; config.delimiter&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;          lineValues.push&#x28;strValue&#x29;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;        output &#x2b;&#x3d; lineValues.join&#x28;config.separator&#x29; &#x2b; &#x27;&#x5c;r&#x5c;n&#x27;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; push the value to a callback if one is defined&#xd;&#xa;      if&#x28;&#x21;config.callback&#x29; &#x7b;&#xd;&#xa;        return output&#x3b;&#xd;&#xa;      &#x7d; else &#x7b;&#xd;&#xa;        config.callback&#x28;&#x27;&#x27;, output&#x29;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;    &#x7d;,&#xd;&#xa;&#xd;&#xa;    &#x2f;&#x2a;&#x2a;&#xd;&#xa;     &#x2a; &#x24;.csv.fromObjects&#x28;objects&#x29;&#xd;&#xa;     &#x2a; Converts a javascript dictionary to a CSV string.&#xd;&#xa;     &#x2a;&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Object&#x7d; objects An array of objects containing the data.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Object&#x7d; &#x5b;options&#x5d; An object containing user-defined options.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character&#x7d; &#x5b;separator&#x5d; An override for the separator character. Defaults to a comma&#x28;,&#x29;.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character&#x7d; &#x5b;delimiter&#x5d; An override for the delimiter character. Defaults to a double-quote&#x28;&#x22;&#x29;.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character&#x7d; &#x5b;sortOrder&#x5d; Sort order of columns &#x28;named after&#xd;&#xa;     &#x2a;   object properties&#x29;. Use &#x27;alpha&#x27; for alphabetic. Default is &#x27;declare&#x27;,&#xd;&#xa;     &#x2a;   which means, that properties will _probably_ appear in order they were&#xd;&#xa;     &#x2a;   declared for the object. But without any guarantee.&#xd;&#xa;     &#x2a; &#x40;param &#x7b;Character or Array&#x7d; &#x5b;manualOrder&#x5d; Manually order columns. May be&#xd;&#xa;     &#x2a; a strin in a same csv format as an output or an array of header names&#xd;&#xa;     &#x2a; &#x28;array items won&#x27;t be parsed&#x29;. All the properties, not present in&#xd;&#xa;     &#x2a; &#x60;manualOrder&#x60; will be appended to the end in accordance with &#x60;sortOrder&#x60;&#xd;&#xa;     &#x2a; option. So the &#x60;manualOrder&#x60; always takes preference, if present.&#xd;&#xa;     &#x2a;&#xd;&#xa;     &#x2a; This method generates a CSV file from an array of objects &#x28;name&#x3a;value pairs&#x29;.&#xd;&#xa;     &#x2a; It starts by detecting the headers and adding them as the first line of&#xd;&#xa;     &#x2a; the CSV file, followed by a structured dump of the data.&#xd;&#xa;     &#x2a;&#x2f;&#xd;&#xa;    fromObjects&#x3a; function&#x28;objects, options, callback&#x29; &#x7b;&#xd;&#xa;      var options &#x3d; &#x28;options &#x21;&#x3d;&#x3d; undefined &#x3f; options &#x3a; &#x7b;&#x7d;&#x29;&#x3b;&#xd;&#xa;      var config &#x3d; &#x7b;&#x7d;&#x3b;&#xd;&#xa;      config.callback &#x3d; &#x28;&#x28;callback &#x21;&#x3d;&#x3d; undefined &#x26;&#x26; typeof&#x28;callback&#x29; &#x3d;&#x3d;&#x3d; &#x27;function&#x27;&#x29; &#x3f; callback &#x3a; false&#x29;&#x3b;&#xd;&#xa;      config.separator &#x3d; &#x27;separator&#x27; in options &#x3f; options.separator &#x3a; &#x24;.csv.defaults.separator&#x3b;&#xd;&#xa;      config.delimiter &#x3d; &#x27;delimiter&#x27; in options &#x3f; options.delimiter &#x3a; &#x24;.csv.defaults.delimiter&#x3b;&#xd;&#xa;      config.headers &#x3d; &#x27;headers&#x27; in options &#x3f; options.headers &#x3a; &#x24;.csv.defaults.headers&#x3b;&#xd;&#xa;      config.sortOrder &#x3d; &#x27;sortOrder&#x27; in options &#x3f; options.sortOrder &#x3a; &#x27;declare&#x27;&#x3b;&#xd;&#xa;      config.manualOrder &#x3d; &#x27;manualOrder&#x27; in options &#x3f; options.manualOrder &#x3a; &#x5b;&#x5d;&#x3b;&#xd;&#xa;      config.transform &#x3d; options.transform&#x3b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; added by ERIC, return just the arrays&#xd;&#xa;      config.justArrays &#x3d; &#x27;justArrays&#x27; in options &#x3f; options.justArrays &#x3a; false&#x3b;&#xd;&#xa;&#xd;&#xa;      if &#x28;typeof config.manualOrder &#x3d;&#x3d;&#x3d; &#x27;string&#x27;&#x29; &#x7b;&#xd;&#xa;        config.manualOrder &#x3d; &#x24;.csv.toArray&#x28;config.manualOrder, config&#x29;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      if &#x28;config.transform &#x21;&#x3d;&#x3d; undefined&#x29; &#x7b;&#xd;&#xa;        var origObjects &#x3d; objects&#x3b;&#xd;&#xa;        objects &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;&#xd;&#xa;        var i&#x3b;&#xd;&#xa;        for &#x28;i &#x3d; 0&#x3b; i &#x3c; origObjects.length&#x3b; i&#x2b;&#x2b;&#x29; &#x7b;&#xd;&#xa;          objects.push&#x28;config.transform.call&#x28;undefined, origObjects&#x5b;i&#x5d;&#x29;&#x29;&#x3b;&#xd;&#xa;        &#x7d;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      var props &#x3d; &#x24;.csv.helpers.collectPropertyNames&#x28;objects&#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;      if &#x28;config.sortOrder &#x3d;&#x3d;&#x3d; &#x27;alpha&#x27;&#x29; &#x7b;&#xd;&#xa;        props.sort&#x28;&#x29;&#x3b;&#xd;&#xa;      &#x7d; &#x2f;&#x2f; else &#x7b;&#x7d; - nothing to do for &#x27;declare&#x27; order&#xd;&#xa;&#xd;&#xa;      if &#x28;config.manualOrder.length &#x3e; 0&#x29; &#x7b;&#xd;&#xa;&#xd;&#xa;        var propsManual &#x3d; &#x5b;&#x5d;.concat&#x28;config.manualOrder&#x29;&#x3b;&#xd;&#xa;        var p&#x3b;&#xd;&#xa;        for &#x28;p &#x3d; 0&#x3b; p &#x3c; props.length&#x3b; p&#x2b;&#x2b;&#x29; &#x7b;&#xd;&#xa;          if &#x28;propsManual.indexOf&#x28; props&#x5b;p&#x5d; &#x29; &#x3c; 0&#x29; &#x7b;&#xd;&#xa;            propsManual.push&#x28; props&#x5b;p&#x5d; &#x29;&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;        &#x7d;&#xd;&#xa;        props &#x3d; propsManual&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      var o, p, line, output &#x3d; &#x5b;&#x5d;, propName&#x3b;&#xd;&#xa;      if &#x28;config.headers&#x29; &#x7b;&#xd;&#xa;        output.push&#x28;props&#x29;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      for &#x28;o &#x3d; 0&#x3b; o &#x3c; objects.length&#x3b; o&#x2b;&#x2b;&#x29; &#x7b;&#xd;&#xa;        line &#x3d; &#x5b;&#x5d;&#x3b;&#xd;&#xa;        for &#x28;p &#x3d; 0&#x3b; p &#x3c; props.length&#x3b; p&#x2b;&#x2b;&#x29; &#x7b;&#xd;&#xa;          propName &#x3d; props&#x5b;p&#x5d;&#x3b;&#xd;&#xa;          if &#x28;propName in objects&#x5b;o&#x5d; &#x26;&#x26; typeof objects&#x5b;o&#x5d;&#x5b;propName&#x5d; &#x21;&#x3d;&#x3d; &#x27;function&#x27;&#x29; &#x7b;&#xd;&#xa;            line.push&#x28;objects&#x5b;o&#x5d;&#x5b;propName&#x5d;&#x29;&#x3b;&#xd;&#xa;          &#x7d; else &#x7b;&#xd;&#xa;            line.push&#x28;&#x27;&#x27;&#x29;&#x3b;&#xd;&#xa;          &#x7d;&#xd;&#xa;        &#x7d;&#xd;&#xa;        output.push&#x28;line&#x29;&#x3b;&#xd;&#xa;      &#x7d;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; modification by ERIC - just give me the arrays you made out of the object&#xd;&#xa;      if &#x28;config.justArrays&#x29;&#xd;&#xa;        return output&#x3b;&#xd;&#xa;&#xd;&#xa;      &#x2f;&#x2f; push the value to a callback if one is defined&#xd;&#xa;      return &#x24;.csv.fromArrays&#x28;output, options, config.callback&#x29;&#x3b;&#xd;&#xa;    &#x7d;&#xd;&#xa;  &#x7d;&#x3b;&#xd;&#xa;&#xd;&#xa;  &#x2f;&#x2f; Maintenance code to maintain backward-compatibility&#xd;&#xa;  &#x2f;&#x2f; Will be removed in release 1.0&#xd;&#xa;  &#x24;.csvEntry2Array &#x3d; &#x24;.csv.toArray&#x3b;&#xd;&#xa;  &#x24;.csv2Array &#x3d; &#x24;.csv.toArrays&#x3b;&#xd;&#xa;  &#x24;.csv2Dictionary &#x3d; &#x24;.csv.toObjects&#x3b;&#xd;&#xa;&#xd;&#xa;  &#x2f;&#x2f; CommonJS module is defined&#xd;&#xa;  if &#x28;typeof module &#x21;&#x3d;&#x3d; &#x27;undefined&#x27; &#x26;&#x26; module.exports&#x29; &#x7b;&#xd;&#xa;    module.exports &#x3d; &#x24;.csv&#x3b;&#xd;&#xa;  &#x7d;&#xd;&#xa;&#xd;&#xa;&#x7d;&#x29;.call&#x28; this &#x29;&#x3b;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;parse_object&#x28;&#x27;&#x7b;jerry&#x3a;smith&#x7d;&#x27;,null&#x29;&#x3b;&#xd;&#xa;</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name/>
        <rename/>
        <type>None</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>112</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>

</transformation>
